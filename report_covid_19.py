# -*- coding: utf-8 -*-
"""Report Covid-19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AxrywOfylfvQawgBujR8agmtpx_m1Fd-

# "รายงาน COVID-19 ประจำวัน ข้อมูลประจำประเทศไทย"
> ข้อมูลวันที่ 12 ส.ค.64 - 20 ต.ค. 64

> DATA FROM : https://data.go.th/

#เตรียมข้อมูล

ใช้ !wget เพื่อ Download Data จาก Internet
"""

!wget https://data.go.th/dataset/8a956917-436d-4afd-a2d4-59e4dd8e906e/resource/5fe98719-5d48-4364-8e7e-1b785e9aff78/download/covid-19-daily-qi4ft3.zip

"""ใช้คำสั่ง !unzip เพื่อแตก zipfile"""

!unzip covid-19-daily-qi4ft3.zip

import pandas as pd

"""ใช้ pandas อ่านข้อมูลที่เป็นไฟล์ Excel"""

dat = pd.read_excel('raayngaancchamnwnphuutidechuue-covid-19-pracchamwan.xlsx')

"""ใช้ pandas อ่านข้อมูลที่เป็นไฟล์ CSV"""

dat = pd.read_csv('raayngaancchamnwnphuutidechuue-covid-19-pracchamwan0.csv')

dat

dat[['age','sex','nationality']]

set(dat['nationality'])

set(dat['sex'])

"""ข้อมูลเฉพาะคนไทยที่ติดเชื้อ"""

thai_dat = dat[((dat['nationality']=='Thai') | (dat['nationality']=='Thailand'))]

"""เฉพาะเพศชาย"""

thai_man_dat = thai_dat[((thai_dat['sex']=='ชาย') | (thai_dat['sex']=='นาย'))]

"""เฉพาะเพศหญิง"""

thai_woman_dat = thai_dat[thai_dat['sex']=='หญิง']

"""#การดูสถิติเบื้องต้น

จำนวนของแต่ละเพศ
"""

#ประเทศไทย
print('จำนวนเพศชาย =',len(thai_man_dat))
print('จำนวนเพศหญิง =',len(thai_woman_dat))

dat['age'] = pd.to_numeric(dat['age'], errors = 'coerce')

"""1. count -> จำนวนทั้งหมด
2. mean -> ค่าเฉลี่ย
3. std -> ค่าความเบี่ยงเบน  

"""

dat.describe()

"""สถิติของคนที่ไม่ใช่คนไทย"""

dat[((dat['nationality']!='Thai') | (dat['nationality']!='Thailand'))].describe()

dat[((dat['nationality']!='Thai') | (dat['nationality']!='Thailand')) & ((dat['sex']=='ชาย') | (dat['sex']=='นาย'))].describe()

dat[((dat['nationality']!='Thai') | (dat['nationality']!='Thailand')) & (dat['sex']=='หญิง')].describe()

"""สถิติของคนไทย


"""

dat[((dat['nationality']=='Thai') | (dat['nationality']=='Thailand'))].describe()

dat[((dat['nationality']=='Thai') | (dat['nationality']=='Thailand')) & ((dat['sex']=='ชาย') | (dat['sex']=='นาย'))].describe()

dat[((dat['nationality']=='Thai') | (dat['nationality']=='Thailand')) & (dat['sex']=='หญิง')].describe()

#histogram
#โดยรวม
fdat = dat[dat['age']<150]
fdat['age'].hist(figsize=(20,10))

thai_dat['age'].hist(figsize=(20,10))

thai_dat['sex'].value_counts()

thai_dat['sex'].value_counts().plot.bar().grid()

import numpy as np
th_fe_dat = thai_dat[thai_dat['sex']=='หญิง']['age']
th_m_dat  = thai_dat[thai_dat['sex']=='ชาย']['age']
fecount, division = np.histogram(th_fe_dat,range=(0,100),bins=20)
mcount, division = np.histogram(th_m_dat,range=(0,100),bins=20)

#Data Visualization คนไทยที่ติดเชื้อโดยจำแนกตามเพศและอายุ
fe_m_dat = pd.DataFrame()
fe_m_dat['Female'] = fecount
fe_m_dat['Male'] = mcount
fe_m_dat.index = range(0,100,5)
fe_m_dat.plot.bar(figsize=(20,5)).grid()

clus_dat = dat[['risk','announce_date','province_of_onset']]

clusres = clus_dat['risk'].value_counts()
clusres = pd.DataFrame(clusres)
clusres['cluster'] = clusres.index
clusres.columns = ['count','cluster']
clusres

import plotly.express as px
px.bar(clusres, x='cluster', y='count')

px.bar(clusres, x='cluster', y='count',log_y = True)

"""#พลอต trend ของการติดเชื้อ"""

from datetime import datetime
dat['date'] = dat['announce_date'].apply(lambda x:datetime.strptime(x, '%d/%m/%Y'))
dat

dat[['No.', 'date']]

dat[['No.','date']].groupby(by = 'date').count()

plottrend = dat[['No.','date']].groupby(by = 'date').count()

plottrend.columns = ['daily infected']

plottrend['date'] = plottrend.index

plottrend

px.line(plottrend, x='date', y='daily infected', log_y=True, title='COVID-19')